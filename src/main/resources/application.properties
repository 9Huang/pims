#服务端口号
server.port=9424
server.servlet.context-path=/pims

#项目名称
spring.application.name=pims

# 用于支持彩色控制台日志
spring.output.ansi.enabled=always

# redis配置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=200ms

#spring-session 使用
spring.session.store-type=none

spring.cache.type=redis

spring.jpa.show-sql=true

#spring.config.type=ehcache
#spring.config.ehcache.config=classpath:ehcache.xml


#mybatis配置文件存放位置
#mybatis.config-location=classpath:mapper/config/mybatis-config.xml
#mybatis映射文件存放位置
mybatis.mapper-locations=classpath:mapper/*.xml
#mybatis model文件存放位置
mybatis.type-aliases-package=com.huang.pims.beans
# 控制台输出执行的SQL
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis.configuration.log-impl=org.apache.ibatis.logging.slf4j.Slf4jImpl

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/pims?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=1024
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource


#root日志以WARN级别输出
#logging.level.root=WARN
#springframework.web日志以DEBUG级别输出
#logging.level.org.springframework.web=DEBUG
#hibernate日志以ERROR级别输出
#logging.level.org.hibernate=ERROR
logging.config=classpath:config/log/logback-spring.xml

# 文件中配置dev，测试环境、生产环境通过main方法--spring.profiles.active参数注入
spring.profiles.active=dev

log.level.active=INFO
# 以下配置根据系统自定义配置，以下可通过apollo注入
# 日志中打印的应用名
log.application.name=pims
# 生产环境日志级别
log.pro.level=INFO
# 开发环境日志级别
log.dev.level=INFO
# 日志文件名
log.file.name=pims
# 日志文件最大归档数
log.file.maxIndex=20
# 单个日志文件最大归档大小
log.file.maxFileSize=50MB
# 日志文件保留天数
log.file.maxHistory=30

#开启Multipart解析器
spring.servlet.multipart.enabled=true
#上传文件所存放的临时目录
spring.servlet.multipart.location=D:/temp/uploads/
#文件的最大大小，单位为字节
spring.servlet.multipart.max-file-size=5242880
#请求的最大大小，单位为字节
spring.servlet.multipart.max-request-size=10485760
#文件大小阈值，当大于这个阈值时将写入到磁盘，否则在内存中。默认值为0
spring.servlet.multipart.file-size-threshold=0
spring.servlet.multipart.resolve-lazily=false

